{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\javaTeamProject-main\\\\Frontend\\\\my-registration-app\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Style/Login.css';\nimport { validateEmail, validatePassword } from '../validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleLogin = e => {\n    e.preventDefault();\n    const isEmailValid = validateEmail(email);\n    const isPasswordValid = validatePassword(password);\n    if (!isEmailValid) {\n      alert('Email не должен содержать @mail.ru и должен быть действительным.');\n      return;\n    }\n    if (!isPasswordValid) {\n      alert('Пароль должен быть минимум 6 символов.');\n      return;\n    }\n    setMessage(`Добро пожаловать, ${email}!`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"registration-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"registration-label\",\n        children: [\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0447\\u0442\\u0443:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"registration-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"registration-label\",\n        children: [\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"registration-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"registration-button\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"registration-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"d0J/XCGznNwJDPwFtxo8Y/0hle4=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","validateEmail","validatePassword","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","message","setMessage","handleLogin","e","preventDefault","isEmailValid","isPasswordValid","alert","className","children","onSubmit","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/OneDrive/Рабочий стол/javaTeamProject-main/Frontend/my-registration-app/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Style/Login.css';\r\nimport { validateEmail, validatePassword } from '../validation';\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [message, setMessage] = useState<string>('');\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const isEmailValid = validateEmail(email);\r\n    const isPasswordValid = validatePassword(password);\r\n\r\n    if (!isEmailValid) {\r\n      alert('Email не должен содержать @mail.ru и должен быть действительным.');\r\n      return;\r\n    }\r\n\r\n    if (!isPasswordValid) {\r\n      alert('Пароль должен быть минимум 6 символов.');\r\n      return;\r\n    }\r\n\r\n    setMessage(`Добро пожаловать, ${email}!`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"registration-container\">\r\n      <form onSubmit={handleLogin} className=\"registration-form\">\r\n        <label className=\"registration-label\">\r\n          Введите почту:\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"registration-input\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"registration-label\">\r\n          Введите пароль:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"registration-input\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"registration-button\">Войти</button>\r\n      </form>\r\n      {message && <p className=\"registration-message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}