{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\javaTeamProject-main\\\\Frontend\\\\my-registration-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport RegistrationForm from \"./components/Registration\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const handleLogout = () => {\n    setIsAuthenticated(false); // Логика выхода\n  };\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true); // Логика успешного входа\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isAuthenticated: isAuthenticated,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(RegistrationForm, {\n            onSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useState","Login","Navbar","RegistrationForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","handleLogout","handleLoginSuccess","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSuccess","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/OneDrive/Рабочий стол/javaTeamProject-main/Frontend/my-registration-app/src/App.tsx"],"sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport RegistrationForm from \"./components/Registration\";\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\n  const handleLogout = () => {\n    setIsAuthenticated(false); // Логика выхода\n  };\n\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true); // Логика успешного входа\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar isAuthenticated={isAuthenticated} onLogout={handleLogout} />\n        <Routes>\n          <Route path=\"/\" element={<RegistrationForm onSuccess={handleLoginSuccess} />} />\n          <Route path=\"/Login\" element={<Login onSuccess={handleLoginSuccess} />} />\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAEtE,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBD,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BF,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACR,aAAa;MAAAiB,QAAA,gBACZT,OAAA,CAACH,MAAM;QAACQ,eAAe,EAAEA,eAAgB;QAACK,QAAQ,EAAEH;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEd,OAAA,CAACP,MAAM;QAAAgB,QAAA,gBACLT,OAAA,CAACN,KAAK;UAACqB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEhB,OAAA,CAACF,gBAAgB;YAACmB,SAAS,EAAET;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChFd,OAAA,CAACN,KAAK;UAACqB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEhB,OAAA,CAACJ,KAAK;YAACqB,SAAS,EAAET;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBAChB,CAAC;AAEP,CAAC;AAACV,EAAA,CAtBID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}