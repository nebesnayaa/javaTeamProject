{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\javaTeamProject-main\\\\Frontend\\\\my-registration-app\\\\src\\\\components\\\\registarion.tsx\",\n  _s = $RefreshSig$();\n// src/components/RegistrationForm.tsx\nimport React, { useState } from 'react';\nimport './Style/RegistrationForm.css';\nimport { validateEmail, validatePassword } from '../validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const handleRegister = e => {\n    e.preventDefault();\n    const isEmailValid = validateEmail(email);\n    const isPasswordValid = validatePassword(password);\n    if (!isEmailValid) {\n      alert('Email должен содержать @gmail.com');\n      return;\n    }\n    if (!isPasswordValid) {\n      alert('Пароль должен быть от 8 до 20 символов и содержать буквы и цифры.');\n      return;\n    }\n    const newUser = {\n      username,\n      email,\n      password\n    };\n    setMessage(`Привет, ${newUser.username}!`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"registration-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"registration-label\",\n        children: [\"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"registration-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"registration-label\",\n        children: [\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0447\\u0442\\u0443:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"registration-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"registration-label\",\n        children: [\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"registration-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"registration-button\",\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"registration-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"oLzKqI5UG0tEEchYQURkweP2xWY=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","validateEmail","validatePassword","jsxDEV","_jsxDEV","RegistrationForm","_s","email","setEmail","password","setPassword","username","setUsername","message","setMessage","handleRegister","e","preventDefault","isEmailValid","isPasswordValid","alert","newUser","className","children","onSubmit","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/OneDrive/Рабочий стол/javaTeamProject-main/Frontend/my-registration-app/src/components/registarion.tsx"],"sourcesContent":["// src/components/RegistrationForm.tsx\nimport React, { useState } from 'react';\nimport './Style/RegistrationForm.css';\nimport { validateEmail, validatePassword } from '../validation';\n\ninterface User {\n  username: string;\n  email: string;\n  password: string;\n}\n\nconst RegistrationForm: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [username, setUsername] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n\n  const handleRegister = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const isEmailValid = validateEmail(email);\n    const isPasswordValid = validatePassword(password);\n\n    if (!isEmailValid) {\n      alert('Email должен содержать @gmail.com');\n      return;\n    }\n\n    if (!isPasswordValid) {\n      alert('Пароль должен быть от 8 до 20 символов и содержать буквы и цифры.');\n      return;\n    }\n\n    const newUser: User = { username, email, password };\n    setMessage(`Привет, ${newUser.username}!`);\n  };\n\n  return (\n    <div className=\"registration-container\">\n      <form onSubmit={handleRegister} className=\"registration-form\">\n        <label className=\"registration-label\">\n          Имя пользователя:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"registration-input\"\n            required\n          />\n        </label>\n        <label className=\"registration-label\">\n          Введите почту:\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"registration-input\"\n            required\n          />\n        </label>\n        <label className=\"registration-label\">\n          Введите пароль:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"registration-input\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className=\"registration-button\">Зарегистрироваться</button>\n      </form>\n      {message && <p className=\"registration-message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}